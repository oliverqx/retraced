version: "3.8"

networks:
  retraced:

x-common-variables: &common-variables
  POSTGRES_HOST: postgres
  HMAC_SECRET_ADMIN: xxxxxxx
  NSQD_HTTP_PORT: 4151
  SHLVL: 1
  POSTGRES_USER: retraced
  EXPORT_PAGE_SIZE_INTERNAL: 2
  POSTGRES_PASSWORD: password
  POSTGRES_POOL_SIZE: 10
  HMAC_SECRET_VIEWER: xxxxxxxxx
  POSTGRES_PORT: 5432
  API_BASE_URL_PATH: /auditlog
  RETRACED_API_BASE: http://localhost:3000/auditlog
  POSTGRES_DATABASE: retraced
  LOG_LEVEL: warn
  ELASTICSEARCH_NODES: http://elasticsearch:9200
  NSQD_HOST: nsqd
  HOSTNAME: retraced-api-67856674bf-kwq7f
  NSQD_TCP_PORT: 4150
  # Set admin root token here
  ADMIN_ROOT_TOKEN: dev
  MAXMIND_GEOLITE2_LICENSE_KEY: ${MAXMIND_GEOLITE2_LICENSE_KEY}

services:
  retraced-api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile-slim
    ports:
      - "3000:3000"
      - "9119:9229"
    environment: *common-variables
    networks:
      - retraced
    depends_on:
      - postgres-migration
    restart: "always"
    command: node --inspect=0.0.0.0 --enable-source-maps build/src/index.js

  retraced-processor:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile-slim
    ports:
      - "3001:3000"
      - "9191:9229"
    environment: *common-variables
    networks:
      - retraced
    depends_on:
      - postgres
    restart: "always"
    command: node --inspect=0.0.0.0 --enable-source-maps build/src/_processor/index.js

  retraced-cron:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile-slim
    environment: *common-variables
    networks:
      - retraced
    depends_on:
      - postgres
    restart: "always"
    command: /usr/local/bin/retraced-auditlog-cron --quiet /crontab

  nsqd:
    image: nsqio/nsq:v1.2.1
    ports:
      - "4150:4150"
      - "4151:4151"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=retraced
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=retraced
    networks:
      - retraced
    restart: "always"
    command: nsqd -statsd-address ${STATSD_HOST}:${STATSD_PORT} -statsd-prefix "nsqd." -log-level ${LOG_LEVEL}

  postgres:
    image: postgres:14.2
    ports:
      - "5432:5432"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=retraced
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=retraced
    networks:
      - retraced
    restart: "always"

  elasticsearch:
    image: elasticsearch:7.8.0
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    networks:
      - retraced

  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: spark/
    networks:
      retraced:
    depends_on:
      - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001

  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    networks:
      retraced:
    ports:
      - 8181:8181
    environment:
      - LOG_LEVEL=info
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  iceberg-server:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    image: iceberg-java-web:3.8
    container_name: iceberg-java-web
    depends_on:
      - rest
      - minio
      - mc
    environment:
      # - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,address=*:5105,server=y,suspend=n
      - LOG_LEVEL=info
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - ENV=Prod
    ports:
      - 9090:9090
      # - 5105:5105
    restart: "always"
    networks:
      retraced:

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      retraced:
        aliases:
          - warehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      retraced:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc anonymous set public minio/warehouse
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "

  retraced-dev-bootstrap:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile-slim
    environment: *common-variables
    networks:
      - retraced
    depends_on:
      - postgres-migration
    command: ./build/src/retracedctl bootstrap --projectName dev --projectId dev --environmentId dev --apiKey dev

  postgres-migration:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile-slim
    environment: *common-variables
    ports:
      - "9339:9229"
    networks:
      - retraced
    depends_on:
      postgres:
        condition: service_started
    command: node --inspect=0.0.0.0 --enable-source-maps build/src/_db/runner-lite.js pg
    restart: "on-failure"

  elastic-migration:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile-slim
    environment: *common-variables
    networks:
      - retraced
    depends_on:
      elasticsearch:
        condition: service_started
    command: node --inspect=0.0.0.0 --enable-source-maps build/src/_db/runner-lite.js es
    restart: "on-failure"

  admin-portal:
    image: boxyhq/jackson:1.9.0
    ports:
      - "5225:5225"
    networks:
      - retraced
    environment:
      - JACKSON_API_KEYS=secret
      - DB_URL=postgres://retraced:password@postgres:5432/postgres
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - NEXTAUTH_URL=http://localhost:5225
      - NEXTAUTH_SECRET=secret
      - NEXTAUTH_ACL=${NEXTAUTH_ACL}
      - RETRACED_HOST_URL=http://retraced-api:3000/auditlog
      - RETRACED_EXTERNAL_URL=http://localhost:3000/auditlog
      - RETRACED_ADMIN_ROOT_TOKEN=dev
    depends_on:
      - "retraced-api"
    restart: "always"

  vector:
    image: timberio/vector:0.X-alpine
    environment:
      - EXPORT_WEBHOOK_USERNAME=${EXPORT_WEBHOOK_USERNAME}
      - EXPORT_WEBHOOK_PASSWORD=${EXPORT_WEBHOOK_PASSWORD}
      - EXPORT_DDSOURCE=${EXPORT_DDSOURCE}
      - EXPORT_DDTAGS=${EXPORT_DDTAGS}
      - EXPORT_DATADOG_HOSTNAME=${EXPORT_DATADOG_HOSTNAME}
      - EXPORT_SERVICE=${EXPORT_SERVICE}
      - EXPORT_DATADOG_API_KEY=${EXPORT_DATADOG_API_KEY}
      - EXPORT_DATADOG_REGION=${EXPORT_DATADOG_REGION}
      - EXPORT_DATADOG_SITE=${EXPORT_DATADOG_SITE}
      - EXPORT_S3_BUCKET=${EXPORT_S3_BUCKET}
      - EXPORT_S3_REGION=${EXPORT_S3_REGION}
      - EXPORT_S3_ACCESS_KEY_ID=${EXPORT_S3_ACCESS_KEY_ID}
      - EXPORT_S3_SECRET_ACCESS_KEY=${EXPORT_S3_SECRET_ACCESS_KEY}
    volumes:
      - ./vector.toml:/etc/vector/vector.toml
      - ./vector/data:/var/lib/vector/
    networks:
      - retraced
    depends_on:
      - "iceberg-server"
      - "minio"
